# Anota a√≠ üñä:

# Toda vez que chamamos uma fun√ß√£o em um programa, o sistema operacional reserva mem√≥ria para as vari√°veis e par√¢metros da fun√ß√£o;

# Sempre quando uma fun√ß√£o √© executada, ela √© guardada na pilha;

# Quando a fun√ß√£o termina de ser executada, ela sai da pilha.

# Vamos utilizar esse c√≥digo com recurs√£o e visualizar o funcionamento da pilha de chamadas:
def saudacao():
    print("Oi")


def despedida():
    print("Tchau")


def init():
    print("Inicio")
    saudacao()
    print("Fim")
    despedida()


init()

# Exerc√≠cio de fixa√ß√£o:

# Exerc√≠cio: Fa√ßa um algoritmo recursivo de soma. Esse algoritmo deve receber um n√∫mero de par√¢metro e deve somar todos os n√∫meros antecessores a ele.


def sum_recursive(n):
    if n == 0:
        return 0
    else:
        print(n)
        return n + sum_recursive(n - 1)


sum_recursive(4)
